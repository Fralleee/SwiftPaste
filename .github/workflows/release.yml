name: Release Pipeline

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Next version"
        required: true
        default: 0.1.0

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      EXTENSION_ID: ocamjpjndljkgcoeadplclcoiepjicgj
    outputs:
      version: ${{ steps.validate-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Determine last found tag
        id: last-tag
        run: |
          if [[ $(git tag) ]]; then
            latestTag=$(git describe --tags $(git rev-list --tags --max-count=1))
          else
            latestTag="0.0.0"
          fi
          echo "tag=$latestTag" >> $GITHUB_ENV

      - name: Validate version
        id: validate-version
        run: |
          latestTag="${{ env.tag }}"
          echo "Latest Tag: $latestTag"
          echo "Input version: ${{ github.event.inputs.version }}"

          latestTag=${latestTag}
          inputVersion=${{ github.event.inputs.version }}

          IFS='.' read -ra VERSION_PARTS <<< "$latestTag"

          major=${VERSION_PARTS[0]}
          minor=${VERSION_PARTS[1]}
          patch=${VERSION_PARTS[2]}

          nextVersion="$major.$minor.$((patch + 1))"

          if [[ "$inputVersion" > "$latestTag" ]]; then
            echo "Input version is correct, using that"
            nextVersion="$inputVersion"
          fi

          echo "version=$nextVersion" >> $GITHUB_ENV

  release:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    env:
      NEXT_VERSION: ${{ needs.build-and-deploy.outputs.version }}
    steps:
      - name: Log version
        run: echo "Validated version ${{ env.NEXT_VERSION }}"
